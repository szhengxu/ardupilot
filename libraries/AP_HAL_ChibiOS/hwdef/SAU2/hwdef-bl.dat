# hw definition file for processing by chibios_hwdef.py

# MCU class and specific type
MCU STM32F4xx STM32F427xx

# board ID for firmware load
APJ_BOARD_ID 7

# crystal frequency
OSCILLATOR_HZ 8000000

define STM32_PLLM_VALUE 8

# board voltage
STM32_VDD 330U

# ChibiOS system timer
STM32_ST_USE_TIMER 5

# flash size
FLASH_SIZE_KB 2048

# location of application code
define FLASH_BOOTLOADER_LOAD_KB 16

# bootloader loads at start of flash
FLASH_RESERVE_START_KB 0

# USB setup
USB_VENDOR 0x0483 # ST
USB_PRODUCT 0x5740
USB_STRING_MANUFACTURER "ArduPilot"
USB_STRING_SERIAL  "%SERIAL%"

# baudrate to run bootloader at on uarts
define BOOTLOADER_BAUDRATE 115200

# uarts and USB to run bootloader protocol on
UART_ORDER OTG1 UART7

# this is the pin that senses USB being connected. It is an input pin
# setup as OPENDRAIN
PA9 VBUS INPUT OPENDRAIN

# now we define the pins that USB is connected on
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

# these are the pins for SWD debugging with a STlinkv2 or black-magic probe
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# UART7 maps to uartF in the HAL (serial5 in SERIALn_ parameters)
PE7 UART7_RX UART7
PE8 UART7_TX UART7

# define a LED
PA8 LED_BOOTLOADER OUTPUT
define HAL_LED_ON 0

# we need to tell HAL_ChibiOS/Storage.cpp how much storage is
# available (in bytes)
define HAL_STORAGE_SIZE 16384
